name: Release Pipeline

on:
  release:
    types: [published]

env:
  DOCKER_IMAGE: wire-bot/hold
  SERVICE_NAME: hold

jobs:
  quay_publish:
    name: Quay Publish Pipeline
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set Release Version
        # use latest tag as release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV

      # extract metadata for labels https://github.com/crazy-max/ghaction-docker-meta
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: quay.io/wire/legalhold

        # setup docker actions https://github.com/docker/build-push-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # login to GCR repo
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
          build-args: |
            release_version=${{ env.RELEASE_VERSION }}

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Legal Hold Quay Release Pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_RELEASE }}
        # Send message only if previous step failed
        if: always()
